groups:
- name: bits-service
  jobs:
  - run-tests
- name: bits-service-release
  jobs:
  - create-and-upload-release
  - release-bits-release-lock
  - deploy-with-S3
  - deploy-with-LOCAL
  - run-system-tests-S3
  - run-system-tests-LOCAL
  - done
- name: clound-controller
  jobs:
  - cc-tests
- name: cf-release
  jobs:
  - create-and-deploy-CF
  - CATs
  - turn-BITS-flag-ON
  - CATs-with-bits
  - release-cf-release-lock

resources:
- name: git-flintstone
  type: git
  source:
    uri: git@github.com:cloudfoundry/flintstone.git
    branch: master
    private_key: {{github-private-key}}

- name: git-cloud-controller
  type: git
  source:
    uri: https://github.com/cloudfoundry/cloud_controller_ng.git
    branch: wip-bits-service

- name: git-bits-service
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bits-service.git
    branch: master

- name: git-bits-service-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bits-service-release.git
    branch: master
- name: git-cf-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-release.git
    branch: wip-bits-service

- name: cf-deployment
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    username: {{bosh-username}}
    password: {{bosh-password}}
    deployment: cf-warden

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: cf-release-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service.git
    branch: metadata
    file: cf-release/version
    private_key: {{github-private-key}}
    initial_version: 230.0.0-dev.1

- name: bits-service-release-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service.git
    branch: metadata
    file: bits-service-release/version
    private_key: {{github-private-key}}
    initial_version: 0.0.0-dev.2

- name: cf-deployment-lock
  type: pool
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service.git
    branch: metadata
    pool: locks/cf-release
    private_key: {{github-private-key}}

- name: bits-release-deployment-lock
  type: pool
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service.git
    branch: metadata
    pool: locks/bits-service-release
    private_key: {{github-private-key}}

jobs:
# BITS-SERVICE
- name: run-tests
  plan:
  - get: git-bits-service
    trigger: true
  - task: run-tests
    file: git-bits-service/ci/tasks/run-tests.yml

# BITS-RELEASE

- name: create-and-upload-release
  plan:
  - aggregate:
    - put: bits-release-deployment-lock
      params: { acquire: true }
    - get: bits-service-release-version
      params:
        pre: dev
    - get: git-bits-service-release
      trigger: true
    - get: stemcell
  - put: bits-service-release-version
    params:
      file: bits-service-release-version/number
  - task: create-release
    file: git-bits-service-release/ci/tasks/create-bits-release.yml
    config:
      params:
        VERSION_FILE: ../bits-service-release-version/number
    on_failure:
      put: bits-release-deployment-lock
      params: { release: bits-release-deployment-lock }
  - task: upload-release
    file: git-bits-service-release/ci/tasks/upload-release.yml
    config:
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        RELEASE_FILE: ../releases/bits-service-*.tgz
    on_failure:
      put: bits-release-deployment-lock
      params: { release: bits-release-deployment-lock }

- name: release-bits-release-lock
  plan:
  - get: bits-release-deployment-lock
    passed: [create-and-upload-release]
  - put: bits-release-deployment-lock
    params: { release: bits-release-deployment-lock }

- name: deploy-with-S3
  plan:
  - aggregate:
    - get: bits-release-deployment-lock
      trigger: true
      passed: [create-and-upload-release]
    - get: bits-service-release-version
      passed: [create-and-upload-release]
    - get: git-bits-service-release
      passed: [create-and-upload-release]
    - get: stemcell
      passed: [create-and-upload-release]
  - task: create-manifest
    file: git-bits-service-release/ci/tasks/create-bits-manifest.yml
    config:
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        BITS_DIRECTORY_KEY: {{s3-blobstore-bucket-name}}
        BITS_AWS_REGION: {{s3-blobstore-region}}
        AWS_ACCESS_KEY_ID: {{s3-blobstore-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{s3-blobstore-secret-access-key}}
        BLOBSTORE_TYPE: s3
  - task: deploy
    file: git-bits-service-release/ci/tasks/deploy-release.yml
    config:
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        MANIFEST_PATH: ../manifests/manifest.yml

- name: run-system-tests-S3
  plan:
  - aggregate:
    - get: bits-release-deployment-lock
      trigger: true
      passed: [deploy-with-S3]
    - get: bits-service-release-version
      passed: [deploy-with-S3]
    - get: git-bits-service-release
      passed: [deploy-with-S3]
  - task: run-tests
    file: git-bits-service-release/ci/tasks/run-tests.yml
    config:
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        BITS_SERVICE_ENDPOINT: 10.250.1.2
        RELEASE_NAME: bits-service-s3

- name: deploy-with-LOCAL
  plan:
  - aggregate:
    - get: bits-release-deployment-lock
      trigger: true
      passed: [create-and-upload-release]
    - get: bits-service-release-version
      passed: [create-and-upload-release]
    - get: git-bits-service-release
      passed: [create-and-upload-release]
    - get: stemcell
      passed: [create-and-upload-release]
  - task: create-manifest
    file: git-bits-service-release/ci/tasks/create-bits-manifest.yml
    config:
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        BITS_DIRECTORY_KEY: another-directory
        BLOBSTORE_TYPE: local
  - task: deploy
    file: git-bits-service-release/ci/tasks/deploy-release.yml
    config:
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        MANIFEST_PATH: ../manifests/manifest.yml

- name: run-system-tests-LOCAL
  plan:
  - aggregate:
    - get: bits-release-deployment-lock
      trigger: true
      passed: [deploy-with-LOCAL]
    - get: bits-service-release-version
      passed: [deploy-with-LOCAL]
      trigger: true
    - get: git-bits-service-release
      passed: [deploy-with-LOCAL]
  - task: run-tests
    file: git-bits-service-release/ci/tasks/run-tests.yml
    config:
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        BITS_SERVICE_ENDPOINT: 10.250.0.2
        RELEASE_NAME: bits-service-local

- name: done
  plan:
  - aggregate:
    - get: bits-service-release-version
      passed:
        - run-system-tests-LOCAL
        - run-system-tests-S3
    - get: bits-release-deployment-lock
      trigger: true
      passed:
        - run-system-tests-LOCAL
        - run-system-tests-S3
  - put: bits-release-deployment-lock
    params: { release: bits-release-deployment-lock }

# CLOUD CONTROLLER
- name: cc-tests
  plan:
  - aggregate:
    - get: git-flintstone
    - get: git-cloud-controller
      trigger: true
  - task: run-tests
    file: git-flintstone/ci/cloud_controller_ng/tasks/run-tests.yml

# CF-RELEASE
- name: create-and-deploy-CF
  serial: true
  plan:
  - aggregate:
    - put: cf-deployment-lock
      params: { acquire: true }
    - get: bits-service-release-version
      passed: [done]
      trigger: true
    - get: cf-release-version
      params:
        pre: dev
    - get: stemcell
    - get: git-cf-release
      trigger: true
    - get: git-bits-service-release
  - put: cf-release-version
    params:
      file: cf-release-version/number
  - task: create-cf-release
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: cf-release-version
        - name: git-bits-service-release
        - name: git-cf-release
      outputs:
        - name: assets
      params:
        VERSION_FILE: ../cf-release-version/number
      run:
        path: git-bits-service-release/ci/scripts/create-cf-release.sh
    on_failure:
      put: cf-deployment-lock
      params: { release: cf-deployment-lock }
  - put: cf-deployment
    params:
      cleanup: true
      manifest: git-bits-service-release/ci/manifests/cf-without-flag.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - assets/release.tgz
    on_failure:
      put: cf-deployment-lock
      params: { release: cf-deployment-lock }

- name: CATs
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-lock
      trigger: true
      passed: [create-and-deploy-CF]
    - get: git-bits-service-release
      passed:
      - create-and-deploy-CF
  - task: run-cats
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: git-bits-service-release
      run:
        path: git-bits-service-release/ci/scripts/run-errand.sh
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        ERRAND_NAME: acceptance_tests

- name: turn-BITS-flag-ON
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-lock
      trigger: true
      passed: [CATs]
    - get: git-bits-service-release
      trigger: true
      passed:
        - CATs
    - get: stemcell
      passed:
      - create-and-deploy-CF
  - task: turn-BITS-flag-ON
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: git-bits-service-release
      outputs:
        - name: assets
      params:
        MANIFEST_PATH: git-bits-service-release/ci/manifests/cf-with-flag.yml
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
      run:
        path: git-bits-service-release/ci/scripts/deploy-release.sh

- name: CATs-with-bits
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-lock
      trigger: true
      passed: [turn-BITS-flag-ON]
    - get: git-bits-service-release
      trigger: true
      passed:
       - turn-BITS-flag-ON
  - task: run-cats
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: git-bits-service-release
      run:
        path: git-bits-service-release/ci/scripts/run-errand.sh
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        ERRAND_NAME: acceptance_tests
  - put: cf-deployment-lock
    params: { release: cf-deployment-lock }

- name: release-cf-release-lock
  plan:
  - get: cf-deployment-lock
    passed: [create-and-deploy-CF]
  - put: cf-deployment-lock
    params: { release: cf-deployment-lock }
