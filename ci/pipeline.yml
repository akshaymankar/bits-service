groups:
- name: bits-service
  jobs:
  - run-tests
- name: bits-service-release
  jobs:
  - build-deploy-and-test
- name: cf-release
  jobs:
  - deploy-CF-without-flag
  - CATs
  - deploy-CF-with-flag
  - CATs-with-bits

resources:
- name: git-bits-service
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bits-service.git
    branch: master

- name: git-bits-service-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bits-service-release.git
    branch: master
- name: git-cf-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-release.git
    branch: wip-bits-service

- name: bits-service-deployment
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    username: {{bosh-username}}
    password: {{bosh-password}}
    deployment: bits-service

- name: cf-deployment
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    username: {{bosh-username}}
    password: {{bosh-password}}
    deployment: cf-warden

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: cf-release-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry-incubator/bits-service.git
    branch: metadata
    file: cf-release/version
    private_key: {{github-private-key}}
    initial_version: 230.0.0-dev.1

- name: cf-deployment-lock
  type: pool
  source:
    uri: git@github.com:cloudfoundry-incubator/bits-service.git
    branch: metadata
    pool: locks/cf-release
    private_key: {{github-private-key}}

jobs:
# BITS-SERVICE
- name: run-tests
  plan:
  - get: git-bits-service
    trigger: true
  - task: run-tests
    file: git-bits-service/ci/tasks/run-tests.yml

# BITS-RELEASE
- name: build-deploy-and-test
  plan:
  - aggregate:
    - get: git-bits-service-release
      trigger: true
    - get: stemcell
  - task: create-release
    file: git-bits-service-release/ci/tasks/create-bits-release.yml
    config:
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
  - put: bits-service-deployment
    params:
      cleanup: true
      manifest: assets/manifest.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - assets/bits-service-*.tgz
  - task: test
    config:
      inputs:
      - name: git-bits-service-release
      image: docker:///tutum/curl
      run:
        path: git-bits-service-release/test/test.sh

# CF-RELEASE
- name: deploy-CF-without-flag
  serial: true
  plan:
  - aggregate:
    - put: cf-deployment-lock
      params: { acquire: true }
    - get: cf-release-version
      params:
        pre: dev
    - get: stemcell
    - get: git-cf-release
    - get: git-bits-service-release
      trigger: true
      passed:
        - build-deploy-and-test
  - task: create-cf-release
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: cf-release-version
        - name: git-bits-service-release
        - name: git-cf-release
      outputs:
        - name: assets
      params:
        VERSION_FILE: ../cf-release-version/number
      run:
        path: git-bits-service-release/ci/scripts/create-cf-release.sh
    on_failure:
      put: cf-deployment-lock
      params: { release: cf-deployment-lock }
  - put: cf-deployment
    params:
      cleanup: true
      manifest: git-bits-service-release/ci/manifests/cf-without-flag.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - assets/release.tgz
    on_failure:
      put: cf-deployment-lock
      params: { release: cf-deployment-lock }
  - put: cf-release-version
    params:
      file: cf-release-version/number
- name: CATs
  serial: true
  plan:
  - get: cf-deployment-lock
    passed: [deploy-CF-without-flag]
  - get: git-bits-service-release
    trigger: true
    passed:
    - deploy-CF-without-flag
  - task: run-cats
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: git-bits-service-release
      run:
        path: git-bits-service-release/ci/scripts/run-errand.sh
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        ERRAND_NAME: acceptance_tests
    on_failure:
      put: cf-deployment-lock
      params: { release: cf-deployment-lock }

- name: deploy-CF-with-flag
  serial: true
  plan:
  - aggregate:
    - get: cf-deployment-lock
      passed: [CATs]
    - get: cf-release-version
      params:
        pre: dev
    - get: git-cf-release
    - get: git-bits-service-release
      trigger: true
      passed:
        - CATs
    - get: stemcell
      passed:
      - deploy-CF-without-flag
  - task: create-cf-release
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: cf-release-version
        - name: git-bits-service-release
        - name: git-cf-release
      outputs:
        - name: assets
      params:
        VERSION_FILE: ../cf-release-version/number
      run:
        path: git-bits-service-release/ci/scripts/create-cf-release.sh
    on_failure:
      put: cf-deployment-lock
      params: { release: cf-deployment-lock }
  - put: cf-deployment
    params:
      manifest: git-bits-service-release/ci/manifests/cf-with-flag.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - assets/release.tgz
    on_failure:
      put: cf-deployment-lock
      params: { release: cf-deployment-lock }
  - put: cf-release-version
    params:
      file: cf-release-version/number
- name: CATs-with-bits
  serial: true
  plan:
  - get: cf-deployment-lock
    passed: [deploy-CF-with-flag]
  - get: git-bits-service-release
    trigger: true
    passed:
     - deploy-CF-with-flag
  - task: run-cats
    config:
      platform: linux
      image: docker:///flintstonecf/ci
      inputs:
        - name: git-bits-service-release
      run:
        path: git-bits-service-release/ci/scripts/run-errand.sh
      params:
        BOSH_TARGET: {{bosh-target}}
        BOSH_USERNAME: {{bosh-username}}
        BOSH_PASSWORD: {{bosh-password}}
        ERRAND_NAME: acceptance_tests
      ensure:
        put: cf-deployment-lock
        params: { release: cf-deployment-lock }
